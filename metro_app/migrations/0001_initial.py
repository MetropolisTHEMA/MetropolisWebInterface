# Generated by Django 3.1.7 on 2021-04-08 21:50

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AgentResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'AgentResults',
            },
        ),
        migrations.CreateModel(
            name='AgentRoadPath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'AgentRoadPath',
            },
        ),
        migrations.CreateModel(
            name='EdgeResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'EdgesResutls',
            },
        ),
        migrations.CreateModel(
            name='NodeResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'NodeResults',
            },
        ),
        migrations.CreateModel(
            name='ODMatrix',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('size', models.IntegerField()),
                ('locked', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'ODMatrix',
            },
        ),
        migrations.CreateModel(
            name='Population',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generated', models.BooleanField()),
                ('random_seed', models.IntegerField()),
            ],
            options={
                'db_table': 'Population',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200, verbose_name='Project Name')),
            ],
            options={
                'db_table': 'Project',
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Run',
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('centroid', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('radius', models.FloatField()),
                ('name', models.CharField(max_length=200, verbose_name='Zone Name')),
            ],
            options={
                'db_table': 'Zone',
            },
        ),
        migrations.CreateModel(
            name='RoadNetwork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('simple', models.BooleanField(default=False)),
                ('locked', models.BooleanField(default=False)),
                ('nb_nodes', models.IntegerField()),
                ('nb_edges', models.IntegerField()),
                ('name', models.CharField(max_length=200, verbose_name='Network Name')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.project')),
            ],
            options={
                'db_table': 'RoadNetWork',
            },
        ),
        migrations.CreateModel(
            name='Preferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('locked', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.project')),
            ],
            options={
                'db_table': 'Preferences',
            },
        ),
        migrations.CreateModel(
            name='PopulationSegment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferences', models.IntegerField()),
                ('od_matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opulationsegments_od_matrix', to='metro_app.odmatrix')),
                ('population', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.population')),
            ],
            options={
                'db_table': 'PopulationSegment',
            },
        ),
        migrations.CreateModel(
            name='ParameterSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField(default=False)),
                ('period_start', models.DateTimeField(auto_now_add=True, verbose_name='Period Start')),
                ('period_end', models.DateTimeField(auto_now_add=True, verbose_name='Period Start')),
                ('learn_process', models.CharField(choices=[(1, 'exponential'), (2, 'linear'), (3, 'quadratic'), (4, 'genetic')], max_length=100)),
                ('learn_param', models.FloatField()),
                ('iter_check', models.BooleanField(default=False)),
                ('iter_value', models.SmallIntegerField()),
                ('converg_check', models.BooleanField()),
                ('converg_value', models.FloatField()),
                ('spillback_enable', models.BooleanField()),
                ('spillback_value', models.FloatField()),
                ('locked', models.BooleanField(default=False)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.project')),
            ],
            options={
                'db_table': 'ParameterSet',
            },
        ),
        migrations.CreateModel(
            name='ODPair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField()),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.zone')),
                ('matrix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odpairs_matrix', to='metro_app.odmatrix')),
                ('origin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='odpairs_origin', to='metro_app.zone')),
            ],
            options={
                'db_table': 'ODPair',
            },
        ),
        migrations.AddField(
            model_name='odmatrix',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.project'),
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_node', models.IntegerField()),
                ('enable_origin', models.BooleanField()),
                ('enable_destination', models.BooleanField()),
                ('name', models.CharField(max_length=200, verbose_name='Node Name')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.roadnetwork')),
            ],
            options={
                'db_table': 'Node',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public', models.BooleanField()),
                ('title', models.CharField(max_length=200, verbose_name='File Title')),
                ('location', models.CharField(max_length=300, verbose_name='Location File')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.project')),
            ],
            options={
                'db_table': 'File',
            },
        ),
        migrations.CreateModel(
            name='Edges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('congestion', models.IntegerField(choices=[(1, 1), (2, 2)], default=1)),
                ('capacity', models.FloatField()),
                ('speed', models.FloatField()),
                ('lenth', models.FloatField()),
                ('lanes', models.SmallIntegerField()),
                ('geometry', django.contrib.gis.db.models.fields.LineStringField(null=True, srid=4326)),
                ('name', models.CharField(max_length=200, verbose_name='Edge Name')),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='metro_app.roadnetwork')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges_source', to='metro_app.node')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges_target', to='metro_app.node')),
            ],
            options={
                'db_table': 'Edges',
            },
        ),
    ]
